# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
      - master
      - dev
  paths:
    include:
      - packages/core

pr: none

variables:
  - group: BackendResources
  - group: GithubCredentials

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
  persistCredentials: true

- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: Npm@1
  displayName: 'Install dependencies'
  inputs:
    command: 'ci'
    workingDir: 'packages/core'

- task: Npm@1
  displayName: 'Linting & Testing'
  inputs:
    command: 'custom'
    workingDir: 'packages/core'
    customCommand: 'run test'
  env:
    COSMOS_ENDPOINT: $(COSMOS-ENDPOINT)
    COSMOS_KEY: $(COSMOS-KEY)
    GITHUB_APP_ID: $(GITHUB-APP-ID)
    GITHUB_CLIENT_ID: $(GITHUB-CLIENT-ID)
    GITHUB_CLIENT_SECRET: $(GITHUB-CLIENT-SECRET)
    GITHUB_REDIRECT_URI: $(GITHUB-REDIRECT-URI)
    GITHUB_SIGNING_KEY: $(GITHUB-SIGNING-KEY)

- task: Bash@3
  name: BumpNpmVersion
  displayName: Bump NPM Version
  inputs:
    targetType: filePath
    filePath: ./packages/core/scripts/version.sh
    arguments: '@paddleboard/core'
    workingDirectory: packages/core
  env:
    SOURCE_BRANCH: $(Build.SourceBranch)

- task: Npm@1
  displayName: 'Build'
  inputs:
    command: 'custom'
    workingDir: 'packages/core'
    customCommand: 'run build'
  env:
    COSMOS_ENDPOINT: $(COSMOS-ENDPOINT)
    COSMOS_KEY: $(COSMOS-KEY)
    GITHUB_APP_ID: $(GITHUB-APP-ID)
    GITHUB_CLIENT_ID: $(GITHUB-CLIENT-ID)
    GITHUB_CLIENT_SECRET: $(GITHUB-CLIENT-SECRET)
    GITHUB_REDIRECT_URI: $(GITHUB-REDIRECT-URI)
    GITHUB_SIGNING_KEY: $(GITHUB-SIGNING-KEY)

- task: Npm@1
  displayName: 'Package NPM Package'
  inputs:
    command: 'custom'
    workingDir: 'packages/core'
    customCommand: 'pack'

- task: CopyFiles@2
  displayName: 'Prepare Build Artifact'
  contents: packages/core/*.tgz
  targetFolder: 'artifact'
  cleanTargetFolder: true

- task: PublishPipelineArtifact@1
  displayName: 'Publish Build Artifact'
  inputs:
    targetPath: 'artifact'
    artifactName: 'core'
