@startuml

class UserProfile {
  +firstName
  +lastName
  +email
  +identity
  +getCategories()
  +getRepositories()
  +getPullRequests()
}

UserProfile -left-> Identity: identity
UserProfile --> DeveloperAccount : accounts
UserProfile --> Category : categories
UserProfile --> CodeReview : reviews

class CodeReview {
  +userId
  +pullRequestId
  +state
  +viewState
  +approveState
}

CodeReview -right-> CodeReviewState : state
note bottom of CodeReview : The developer review \nof a pull request

enum PullRequestState {
  New
  Read
  Approved
  Waiting
  Closed
}

enum PullRequestState {
  Active
  Merged
  Closed
}

enum CodeReviewState {
  Pending
  Approved
  Rejected
  Waiting
}

class DeveloperAccount {
  +userId
  +providerType
  +providerId
  +metadata
  +getRepositories()
}

DeveloperAccount -left-> DeveloperAccountType : type

class Identity {
  +type
  +id
  +metadata
}
Identity --> IdentityType : type
note left of Identity : The UserProfile has \na single identity provider

enum IdentityType {
  Microsoft
  Google
  Facebook
  GitHub
}

enum DeveloperAccountType {
  AzureDevOps
  GitHub
  GitLab
  BitBucket
}

class Category {
  +userId
  +name
  +descriptions
  +getRepositories()
  +getPullRequests()
}

Category ..> Repository: repositories

note right of Category: Categories are unqiue \nto each user DeveloperAccount

class Repository {
  +name
  +description
  +portalUrl
}

Repository --> PullRequest : contains
Repository --> DeveloperAccountType : type
note left of Repository: The same repository \ncan be used referenced \nby multiple users
note right of Repository: The same repository \n can be referenced \n by multiple categories

class PullRequest {
  +repositoryId
  +title
  +description
  +state
}

PullRequest --> CodeReview : reviews
PullRequest --> PullRequestState: state
note left of PullRequest : The same PR can\n be seen by \nmultiple users

@enduml
