# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - packages/github

pr: none

variables:
  - group: BackendResources
  - group: GithubCredentials
  - group: GithubDeployCredentials

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: Npm@1
  displayName: 'Install dependencies'
  inputs:
    command: 'ci'
    workingDir: 'packages/github'

- task: Npm@1
  displayName: 'Linting & Testing'
  inputs:
    command: 'custom'
    workingDir: 'packages/github'
    customCommand: 'run test'
  env:
    COSMOS_ENDPOINT: $(COSMOS-ENDPOINT)
    COSMOS_KEY: $(COSMOS-KEY)
    GITHUB_APP_ID: $(GITHUB-APP-ID)
    GITHUB_CLIENT_ID: $(GITHUB-CLIENT-ID)
    GITHUB_CLIENT_SECRET: $(GITHUB-CLIENT-SECRET)
    GITHUB_REDIRECT_URI: $(GITHUB-REDIRECT-URI)
    GITHUB_SIGNING_KEY: $(GITHUB-SIGNING-KEY)

# Download a secure file to the agent machine
- task: DownloadSecureFile@1
  # name: sshKey # The name with which to reference the secure file's path on the agent, like $(mySecureFile.secureFilePath)
  inputs:
    secureFile: paddleboard_id_rsa

# Install an SSH key prior to a build or deployment
- task: InstallSSHKey@0 # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/install-ssh-key?view=azure-devops
  inputs:
    knownHostsEntry: $(KNOWN_HOSTS_ENTRY)
    sshPublicKey: $(SSH_PUBLIC_KEY)
    sshKeySecureFile: paddleboard_id_rsa
  env:
    KNOWN_HOSTS_ENTRY: $(KNOWN_HOSTS_ENTRY)
    SSH_PUBLIC_KEY: $(SSH_PUBLIC_KEY)  # map to the right format (camelCase) that Azure credentials understand

- task: Bash@3
  name: BumpNpmVersion
  displayName: Bump NPM Version
  inputs:
    targetType: filePath
    filePath: ./packages/github/scripts/version.sh
    arguments: '@paddleboard/github $(NPM_RELEASE_TYPE)'
    workingDirectory: packages/github
  env:
    SOURCE_BRANCH: $(Build.SourceBranch)

- task: Npm@1
  displayName: 'Build'
  inputs:
    command: 'custom'
    workingDir: 'packages/github'
    customCommand: 'run build'
  env:
    COSMOS_ENDPOINT: $(COSMOS-ENDPOINT)
    COSMOS_KEY: $(COSMOS-KEY)
    GITHUB_APP_ID: $(GITHUB-APP-ID)
    GITHUB_CLIENT_ID: $(GITHUB-CLIENT-ID)
    GITHUB_CLIENT_SECRET: $(GITHUB-CLIENT-SECRET)
    GITHUB_REDIRECT_URI: $(GITHUB-REDIRECT-URI)
    GITHUB_SIGNING_KEY: $(GITHUB-SIGNING-KEY)

- task: Npm@1
  displayName: 'Package NPM Package'
  inputs:
    command: 'custom'
    workingDir: 'packages/github'
    customCommand: 'pack'

- task: CopyFiles@2
  displayName: 'Prepare Build Artifact'
  inputs:
    contents: 'packages/github/*.tgz'
    targetFolder: 'artifact'
    cleanTargetFolder: true
    flattenFolders: true

- task: PublishPipelineArtifact@1
  displayName: 'Publish Build Artifact'
  inputs:
    targetPath: 'artifact'
    artifactName: 'github'
