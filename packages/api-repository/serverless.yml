service: pdlbrd-repository-api

provider:
  resourceGroup: wabrez-westus-dev-paddleboard
  prefix: ${opt:prefix, 'sls'}
  name: azure
  region: West US
  runtime: nodejs10.x
  environment:
    COSMOS_ENDPOINT: ${env:COSMOS_ENDPOINT}
    COSMOS_KEY: ${env:COSMOS_KEY}
    STORAGE_CONNECTION: ${env:STORAGE_CONNECTION}
  apim:
    name: wabrez-wus-dev-pdlbrd-apim
    apis:
      - name: user-profile-api
        subscriptionRequired: false
        displayName: User Profile API
        description: User Profile REST API
        protocols:
          - https
        path: users
        authorization: none
      - name: current-user-api
        subscriptionRequired: false
        displayName: CurrentUser API
        description: CurrentUser REST API
        protocols:
          - https
        path: user
        authorization: none
    backends:
      - name: repo-user-profile-backend
        url: api/users
      - name: repo-current-user-backend
        url: api/user
    cors:
      allowCredentials: false
      allowedOrigins:
        - "*"
      allowedMethods:
        - GET
        - POST
        - PUT
        - DELETE
        - PATCH
      allowedHeaders:
        - "*"
      exposeHeaders:
        - "*"

plugins:
  - serverless-azure-functions
  - serverless-webpack

functions:
  # Repositories
  getRepositoryListByUser:
    handler: src/handlers/repository.getRepositoryListByUser
    events:
      - http: true
        x-azure-settings:
          methods:
            - GET
          route: users/{userId}/repositories
          authLevel: function
    apim:
      api: user-profile-api
      backend: repo-user-profile-backend
      operations:
        - method: GET
          urlTemplate: /{userId}/repositories
          templateParameters:
            - name: userId
              type: string

  getRepositoryListByCurrentUser:
    handler: src/handlers/repository.getRepositoryListByUser
    events:
      - http: true
        x-azure-settings:
          methods:
            - GET
          route: user/repositories
          authLevel: function
    apim:
      api: current-user-api
      backend: repo-current-user-backend
      operations:
        - method: GET
          urlTemplate: /repositories

  getRepositoryListByUserAndCategory:
    handler: src/handlers/repository.getRepositoryListByUserAndCategory
    events:
      - http: true
        x-azure-settings:
          methods:
            - GET
          route: users/{userId}/categories/{categoryId}/repositories
          authLevel: function
    apim:
      api: user-profile-api
      backend: repo-user-profile-backend
      operations:
        - method: GET
          urlTemplate: /{userId}/categories/{categoryId}/repositories
          templateParameters:
            - name: userId
              type: string
            - name: categoryId
              type: string

  getRepositoryListByCurrentUserAndCategory:
    handler: src/handlers/repository.getRepositoryListByUserAndCategory
    events:
      - http: true
        x-azure-settings:
          methods:
            - GET
          route: user/categories/{categoryId}/repositories
          authLevel: function
    apim:
      api: current-user-api
      backend: repo-current-user-backend
      operations:
        - method: GET
          urlTemplate: /categories/{categoryId}/repositories
          templateParameters:
            - name: categoryId
              type: string

  getRepository:
    handler: src/handlers/repository.getRepository
    events:
      - http: true
        x-azure-settings:
          methods:
            - GET
          route: users/{userId}/repositories/{repositoryId}
          authLevel: function
    apim:
      api: user-profile-api
      backend: repo-user-profile-backend
      operations:
        - method: GET
          urlTemplate: /{userId}/repositories/{repositoryId}
          templateParameters:
            - name: userId
              type: string
            - name: repositoryId
              type: string

  getRepositoryByCurrentUser:
    handler: src/handlers/repository.getRepository
    events:
      - http: true
        x-azure-settings:
          methods:
            - GET
          route: user/repositories/{repositoryId}
          authLevel: function
    apim:
      api: current-user-api
      backend: repo-current-user-backend
      operations:
        - method: GET
          urlTemplate: /repositories/{repositoryId}
          templateParameters:
            - name: repositoryId
              type: string

  postRepository:
    handler: src/handlers/repository.postRepository
    events:
      - http: true
        x-azure-settings:
          methods:
            - POST
          route: users/{userId}/repositories
          authLevel: function
    apim:
      api: user-profile-api
      backend: repo-user-profile-backend
      operations:
        - method: POST
          urlTemplate: /{userId}/repositories
          templateParameters:
            - name: userId
              type: string

  putRepository:
    handler: src/handlers/repository.putRepository
    events:
      - http: true
        x-azure-settings:
          methods:
            - PUT
          route: users/{userId}/repositories/{repositoryId}
          authLevel: function
    apim:
      api: user-profile-api
      backend: repo-user-profile-backend
      operations:
        - method: PUT
          urlTemplate: /{userId}/repositories/{repositoryId}
          templateParameters:
            - name: userId
              type: string
            - name: repositoryId
              type: string

  patchRepository:
    handler: src/handlers/repository.patchRepository
    events:
      - http: true
        x-azure-settings:
          methods:
            - PATCH
          route: users/{userId}/repositories/{repositoryId}
          authLevel: function
    apim:
      api: user-profile-api
      backend: repo-user-profile-backend
      operations:
        - method: PATCH
          urlTemplate: /{userId}/repositories/{repositoryId}
          templateParameters:
            - name: userId
              type: string
            - name: repositoryId
              type: string

  deleteRepository:
    handler: src/handlers/repository.deleteRepository
    events:
      - http: true
        x-azure-settings:
          methods:
            - DELETE
          route: users/{userId}/repositories/{repositoryId}
          authLevel: function
    apim:
      api: user-profile-api
      backend: repo-user-profile-backend
      operations:
        - method: DELETE
          urlTemplate: /{userId}/repositories/{repositoryId}
          templateParameters:
            - name: userId
              type: string
            - name: repositoryId
              type: string
  ingestRepository:
    handler: src/handlers/repository.ingestRepository
    events:
      - queue: repositories
        x-azure-settings:
          name: message # Specifies which name it's available on `context`
          connection: STORAGE_CONNECTION # App Setting/environment variable which contains Storage Account Connection String
